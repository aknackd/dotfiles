#!/usr/bin/env bash

free::linux () {
    free -m
}

free::macos () {
    # local total_rss_in_bytes
    local total_physical_memory_in_bytes
    local vm_stats_pattern
    local vm_stats

    declare -A vm_stats

    # total_rss_in_bytes=$(($(
    #     ps -caxm -orss | tail -n +2 | awk '{ sum += $1 }; { print sum }' | tail -n 1
    # ) * 1024))

    total_physical_memory_in_bytes=$(sysctl -n 'hw.memsize')

    printf "Total Physical Memory:  %8s MB\n" "$(( ${total_physical_memory_in_bytes} / 1024 / 1024 ))"
    # printf "Real Memory Total (ps): %14s MB\n" "$(( ${total_rss_in_bytes} / 1024 / 1024 ))"

    vm_stats_pattern="^(.+):.*\.$"

    (vm_stat | while read -r line ; do
        if [[ "$line" =~ $vm_stats_pattern ]]; then
            key="$(echo "${BASH_REMATCH[1]}" | sed 's|\"||g; s| |_|g; s|-|_|g;' | tr '[:upper:]' '[:lower:]')"
            value="$(echo "$line" | rev | cut -d ' ' -f 1 | rev | sed 's/\.$//')"

            size_in_mb="$(( "${value}" * 4096 / 1024 / 1024 ))"

            case "$key" in
                pages_wired_down) printf "1|Wired Memory:           %8s MB\n" "$size_in_mb" ;;
                pages_active)     printf "2|Active Memory:          %8s MB\n" "$size_in_mb" ;;
                pages_inactive)   printf "3|Inactive Memory:        %8s MB\n" "$size_in_mb" ;;
                pages_free)       printf "4|Free Memory:            %8s MB\n" "$size_in_mb" ;;
            esac

            vm_stats[$key]="$value"
        fi
    done) | sort | cut -d '|' -f 2-
}

free::unsupported () {
    printf "ERROR: Unsupported platform\n" >&2
    printf "Only Linux and macOS (Darwin) supported\n" >&2
    exit 1
}

case $(uname -s) in
    Linux)  free::linux ;;
    Darwin) free::macos ;;
    *)      free::unsupported ;;
esac

