#!/usr/bin/env bash

# Simple script to start and stop virtual machines with VMware Fusion

# macOS only
if [ "$(uname -s)" != "Darwin" ]; then
   2>&1 printf "ERROR: This script only works on MacOS!\n"
   exit 1
fi

# Check that VMware Fusion is installed
if [ ! -d /Applications/VMware\ Fusion.app ]; then
    2>&1 printf "ERROR: VMware Fusion is not installed!\n"
    exit 1
fi

# Colors
readonly COLOR_RED=$(echo -e "\033[0;31m")
readonly COLOR_GREEN=$(echo -e "\033[0;32m")
readonly COLOR_YELLOW=$(echo -e "\033[0;33m")
readonly COLOR_BLUE=$(echo -e "\033[0;34m")
readonly COLOR_RESET=$(echo -e "\033[0;0m")

# Write a message in a particular color
#
# @param {string} color
# @param {string} message
chalk () {
    local color="$(printf "COLOR_%s" "${1^^}")"
    local message="$2"

    echo -e "${!color}${message}${COLOR_RESET}"
}

# Simple check to see if a virtual machine exists.
vm::check_if_exists () {
    if [ ! -d "$vmPath" ]; then
        2>&1 printf "%s: Virtual machine not found: %s\n" "$(chalk red "ERROR")" "$(chalk green "$vmPath")"
        exit 1
    fi
}

# Lists currently running virtual machines.
vm::list_running () {
    vmrun list | tail -n +2
}

# Starts a virtual machine.
# Also enables shared folders if any are configured.
vm::start () {
    local vmPath="$1"

    vm::check_if_exists "$vmPath"

    printf "Starting virtual machine: %s ...\n" "$(chalk green "$vmPath")"
    vmrun start "$vmPath" nogui

    printf "Enabling shared folders ...\n"
    vmrun enableSharedFolders "$vmPath"
}

# Stops a virtual machine.
# Makes the following assumptions:
#   1. The guest is running a Unix/Linux OS (Windows not supported)
#   2. vmtoolsd is running on the guest so we can find its IP address
#   3. OpenSSH is running on the guest
#   4. sudo is installed on the guest
vm::stop () {
    local vmPath="$1"

    vm::check_if_exists "$vmPath"

    local ipAddress="$(vmrun getGuestIPAddress "$vmPath")"

    printf "Stopping virtual machine: %s ...\n" "$(chalk green "$vmPath")"
    ssh -t "$ipAddress" 'sudo shutdown -h now'
}

case "$1" in
    list|ls)  vm::list_running      ;;
    start)    shift; vm::start "$1" ;;
    stop)     shift; vm::stop "$1"  ;;
esac
