#!/bin/bash
#
# Wrapper for interacting with Truecrypt volumes

# check if we have truecrypt installed in the first place
TRUECRYPT=
case "$(uname -s)" in
    Darwin)
        [ -d /Applications/TrueCrypt.app ] && TRUECRYPT=/Applications/TrueCrypt.app/Contents/MacOS/Truecrypt
        ;;
    linux)
        [ $(am_i_installed truecrypt) -eq 1 ] && TRUECRYPT="$(which truecrypt 2>/dev/null)"
        ;;
esac

if [[ "${TRUECRYPT}" == '' ]]; then
    echo "ERROR: Please install truecrypt first"
    exit 1
fi

# list mounted volumes
function tc_list() {
    "${TRUECRYPT}" --text --list
}

# mount volume
# usage: tc_mount /path/to/truecrypt/file /mount/path
function tc_mount() {
    "${TRUECRYPT}" --text --protect-hidden=no --mount $1 $2
}

# unmount volume
# usage: tc_umount /path/to/truecrypt/file
# NOTE: This only unmounts the truecrypt image, not the actual mount point.
#       Manually run `umount /path/to/truecrypt/volume/mount`
#       or run `umount_all` defined below to umount both the system mount point
#       *and* truecrypt image for all mounted truecrypt images.
function tc_umount() {
    "${TRUECRYPT}" --text --dismount $1
}

# unmount all truecrypt volumes
function tc_umount_all() {
    "${TRUECRYPT}" --text --list 1>/dev/null 2>/dev/null
    if [ $? -eq 0 ]; then
        for MOUNT in "$(${TRUECRYPT} --text --list)"; do
            # TODO handle mount points and files with spaces in their name
            local mountpoint="$(echo $MOUNT | cut -d ' ' -f 4)"
            local tcfile="$(echo $MOUNT | cut -d ' ' -f 2)"

            # use diskutil on OSX (doesn't need root privileges)
            if [[ "$(uname -s)" == 'Darwin' ]]; then
                diskutil umount "${mountpoint}" 1>/dev/null
            # linux must use sudo, unfortunately
            elif [[ "$(uname -s)" == 'linux' ]]; then
                sudo umount "${mountpoint}"
            fi

            ${TRUECRYPT} --text --dismount "${tcfile}"
        done
    else
        echo "No volumes mounted; aborting"
        return 1
    fi
}

# parse command line args
case "$1" in
    list)
        tc_list
        ;;
    mount)
        shift
        tc_mount $1 $2
        ;;
    umount)
        shift
        tc_umount $1
        ;;
    umount-all)
        tc_umount_all
        ;;
    *)
        echo "usage: $0 list|mount|umount|umount-all"
        echo
        echo "COMMANDS"
        echo "    list                                      lists all mounted truecrypt volumes"
        echo
        echo "    mount /path/to/truecrypt/file /mnt/path   mounts a truecrypt file to a specified path"
        echo
        echo "    umount /path/to/truecrypt/file            unmounts a truecrypt file"
        echo "                                              NOTE: This does *not* unmount the system mount point"
        echo
        echo "    umount-all                                unmounts all mounted truecrypt files"
        echo "                                              NOTE: This umounts *both* the system mount point and truecrypt volume"
        exit 1
esac

exit $?
