#!/usr/bin/env python

"""
Prints the amount of free and used memory.

Darwin (Mac OSX) portion taken from:
    http://apple.stackexchange.com/a/4296
    (c) 2010 drfrogsplat
"""

import platform
import subprocess
import sys
import re

if __name__ == '__main__':
    osname = platform.system()
    if 'Linux' in osname:
        free = subprocess.Popen(['free', '-m'], stdout=subprocess.PIPE).communicate()[0]
        print(free.decode(encoding='UTF-8'))
    elif 'Darwin' in osname:
        # Get process info
        ps = subprocess.Popen(['ps', '-caxm', '-orss,comm'], stdout=subprocess.PIPE).communicate()[0]
        vm = subprocess.Popen(['vm_stat'], stdout=subprocess.PIPE).communicate()[0]

        # Iterate processes
        processLines = ps.split('\n')
        sep = re.compile('[\s]+')
        rssTotal = 0 # kB
        for row in range(1,len(processLines)):
            rowText = processLines[row].strip()
            rowElements = sep.split(rowText)
            try:
                rss = float(rowElements[0]) * 1024
            except:
                rss = 0 # ignore...
            rssTotal += rss

        # Process vm_stat
        vmLines = vm.split('\n')
        sep = re.compile(':[\s]+')
        vmStats = {}
        for row in range(1,len(vmLines)-2):
            rowText = vmLines[row].strip()
            rowElements = sep.split(rowText)
            vmStats[(rowElements[0])] = int(rowElements[1].strip('\.')) * 4096

        print('Wired Memory:               {0} MB'.format(vmStats['Pages wired down'] / 1024 / 1024))
        print('Active Memory:              {0} MB'.format(vmStats['Pages active'] / 1024 / 1024))
        print('Inactive Memory:            {0} MB'.format(vmStats['Pages inactive'] / 1024 / 1024))
        print('Free Memory:                {0} MB'.format(vmStats['Pages free'] / 1024 / 1024))
        print('Real Memory Total (ps):     {0:.2f} MB'.format(rssTotal/1024/1024))
    else:
        print('Unable to get free memory; OS = {0}'.format(osname))
